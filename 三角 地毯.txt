//地毯
    private int x,y;
    public void draw(int x,int y,int i,int HalfLength,int gap){
        if(i>0){
            int x1=x- HalfLength;
            int y1=y- HalfLength;
            int x2=x+ HalfLength;
            int y2=y- HalfLength;
            int x3=x- HalfLength;
            int y3=y+ HalfLength;
            int x4=x+ HalfLength;
            int y4=y+ HalfLength;
            gr.drawLine(x1,y1,x2,y2);
            gr.drawLine(x4,y4,x2,y2);
            gr.drawLine(x3,y3,x4,y4);
            gr.drawLine(x1,y1,x3,y3);
            HalfLength/=3;gap/=3;
            draw(x-gap,y-gap,i-1,HalfLength,gap);
            draw(x,y-gap,i-1,HalfLength,gap);
            draw(x+gap,y-gap,i-1,HalfLength,gap);
            draw(x-gap,y,i-1,HalfLength,gap);
            draw(x+gap,y,i-1,HalfLength,gap);
            draw(x-gap,y+gap,i-1,HalfLength,gap);
            draw(x,y+gap,i-1,HalfLength,gap);
            draw(x+gap,y+gap,i-1,HalfLength,gap);
        }
        else{}
    }
    public void mouseClicked(MouseEvent e){
        Random random=new Random();
        x=random.nextInt(500)+500;
        y=random.nextInt(300)+200;
        draw(x,y,5,30,300);
    }
//    三角形
//    private int x1,y1,x2,y2,x3,y3;
//    public void draw(int x1,int y1,int x2,int y2,int x3,int y3,int i){
//        if(i>0) {
//            gr.drawLine(x1, y1, x2, y2);
//            gr.drawLine(x3, y3, x2, y2);
//            gr.drawLine(x1, y1, x3, y3);
//            int X1=x1;
//            int Y1=y1;
//            int X2=x2;
//            int Y2=y2;
//            int X3=x3;
//            int Y3=y3;
//            x1 = (x1 - x2) / 2 +x2;
//            y1 = (y2 - y1) / 2 +y1;
//            x2 = (x3 - x2) / 2 +x2;
//            y2 = (y3 - y2) / 2 +y2;
//            x3 = (x3 - X1) / 2+X1;
//            y3 = (y3 - Y1) / 2 +Y1;
//            gr.drawLine(x1, y1, x2, y2);
//            gr.drawLine(x3, y3, x2, y2);
//            gr.drawLine(x1, y1, x3, y3);
//            draw(X1, Y1, x1, y1, x3, y3, i-1);
//            draw(x1, y1, X2, Y2, x2, y2, i-1);
//            draw(x3, y3, x2, y2, X3, Y3, i-1);
//        }
//        else{}
//    }
//    public void mouseClicked(MouseEvent e) {
//        Random random=new Random();
//        x1=random.nextInt(500)+500;
//        y1=random.nextInt(300)+200;
//        int x=(int)(sqrt(3)*100);
//        x2=x1-100;
//        y2=y1+x;
//        x3=x1+100;
//        y3=y1+x;
//        draw(x1,y1,x2,y2,x3,y3,3);
//    }
//    线条
//    private int x1=0,x2=1200,y=50;
//    public void draw(int x1,int x2,int y,int i){
//    if(i==0){
//        gr.drawLine(x1, y, x2, y);
//    }
//    else{
//        int gap=100;
//        gr.drawLine(x1,y,x2,y);
//        int X1=x1;
//        int X2=(x2-x1)/3+x1;
//        int Y=y+gap;
//        draw(X1,X2,Y,i-1);
//        X1=(x2 - x1) * 2 / 3 + x1;
//        X2=x2;
//        draw(X1,X2,Y,i-1);
//    }
//}
//    public void mouseClicked(MouseEvent e){
//        draw(x1,x2,y,5);
//    }